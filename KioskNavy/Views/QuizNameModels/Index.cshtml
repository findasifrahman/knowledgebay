@model PagedList.IPagedList<KioskNavy.Models.QuizNameModels>
@using PagedList.Mvc;
<style>
    body {
        background-color: #0066cc;
        background-image: none;
        background-repeat: no-repeat;
        background-size: cover;
        color:whitesmoke;
    }
</style>
@{
    Layout = @ViewBag.Layout;
    ViewBag.Title = "Quiz name Models Index";
}
<div class="container">
        <h2 class="well" style="text-align:center"> New Subject Entry </h2>
        <br/>
        <div class="wrapper fade-in">
            <div class="" style="text-align:center">
                @Html.ActionLink("Add New Quiz Subject", "Create",null,new { @class = "btn btn-success", @style = "width:200px"})
            </div>
             <br/>

            @using (Html.BeginForm("Index", "QuizNameModels", FormMethod.Get))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-2 col-xs-6">
                            <div class="input-group">
                                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "col-md-1 col-xs-1 form-control control-label" })
                                <span class="input-group-addon"><i class=" glyphicon glyphicon-search"></i></span>
                            </div>
                        </div>
                        <div class="col-md-1 col-lg-1 col-xs-1">
                            <input type="submit" value="Search" class="btn btn-success" />
                        </div>
                    </div>
                </div>

            }

            <table class="table" style="color:whitesmoke">
                <tr>
                    <th>
                        @Html.ActionLink("SubjectName", "Index", new { sortOrder = ViewBag.subjectSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("CreateDate", "Index", new { sortOrder = ViewBag.dateSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th></th>
                </tr>

            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubjectName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateDate)
                    </td>
                    <td style="text-align:right">
                        @Html.ActionLink("Edit", "Edit", new { id = item.SubjectName }, new { @class = "btn btn-success" }) &nbsp;
                        @Html.ActionLink("View All Question", "Index", "Quizquestionmodels", new { id = item.SubjectName }, new { @class = "btn btn-success" }) &nbsp;
                        
                        @Html.ActionLink("Delete", "Delete", new { id = item.SubjectName }, new { @class = "btn btn-success" }) 
                    </td>
                </tr>
            }

            </table>
        </div>

    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

</div>